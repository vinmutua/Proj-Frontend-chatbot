{
    "sourceFile": "src/app/auth/login/login.component.ts",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 21,
            "patches": [
                {
                    "date": 1740264085420,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1740266270340,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -23,8 +23,11 @@\n     private router: Router\r\n   ) {}\r\n \r\n   ngOnInit(): void {\r\n+    // Check token expiration on component init\r\n+    this.authService.autoLogout();\r\n+    \r\n     this.loginForm = this.fb.group({\r\n       email: ['', [Validators.required, Validators.email]],\r\n       password: ['', Validators.required],\r\n       remember: [false]\r\n"
                },
                {
                    "date": 1740268071460,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -23,11 +23,8 @@\n     private router: Router\r\n   ) {}\r\n \r\n   ngOnInit(): void {\r\n-    // Check token expiration on component init\r\n-    this.authService.autoLogout();\r\n-    \r\n     this.loginForm = this.fb.group({\r\n       email: ['', [Validators.required, Validators.email]],\r\n       password: ['', Validators.required],\r\n       remember: [false]\r\n"
                },
                {
                    "date": 1740268266293,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -23,8 +23,9 @@\n     private router: Router\r\n   ) {}\r\n \r\n   ngOnInit(): void {\r\n+    this.authService.autoLogout();\r\n     this.loginForm = this.fb.group({\r\n       email: ['', [Validators.required, Validators.email]],\r\n       password: ['', Validators.required],\r\n       remember: [false]\r\n"
                },
                {
                    "date": 1740268276065,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -23,9 +23,8 @@\n     private router: Router\r\n   ) {}\r\n \r\n   ngOnInit(): void {\r\n-    this.authService.autoLogout();\r\n     this.loginForm = this.fb.group({\r\n       email: ['', [Validators.required, Validators.email]],\r\n       password: ['', Validators.required],\r\n       remember: [false]\r\n"
                },
                {
                    "date": 1740268346870,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -23,13 +23,13 @@\n     private router: Router\r\n   ) {}\r\n \r\n   ngOnInit(): void {\r\n+    // Removed JWT expiration check\r\n     this.loginForm = this.fb.group({\r\n       email: ['', [Validators.required, Validators.email]],\r\n       password: ['', Validators.required],\r\n       remember: [false]\r\n-    });\r\n   }\r\n \r\n   async onSubmit(): Promise<void> {\r\n     if (this.loginForm.valid) {\r\n"
                },
                {
                    "date": 1740268365529,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -28,8 +28,9 @@\n     this.loginForm = this.fb.group({\r\n       email: ['', [Validators.required, Validators.email]],\r\n       password: ['', Validators.required],\r\n       remember: [false]\r\n+    });\r\n   }\r\n \r\n   async onSubmit(): Promise<void> {\r\n     if (this.loginForm.valid) {\r\n"
                },
                {
                    "date": 1740270644937,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -59,9 +59,9 @@\n \r\n   async googleLogin(): Promise<void> {\r\n     try {\r\n       this.isLoading = true;\r\n-      await this.authService.googleLogin().toPromise();\r\n+      const response = await this.authService.googleLogin();\r\n       this.router.navigate(['/dashboard']);\r\n     } catch (error: unknown) {\r\n       this.errorMessage = error instanceof Error ? \r\n         error.message : 'Google login failed. Please try again.';\r\n"
                },
                {
                    "date": 1740309643036,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -17,9 +17,12 @@\n   isLoading = false;\r\n   errorMessage = '';\r\n \r\n   constructor(\r\n-    private fb: FormBuilder,\r\n+    private fb\r\n+    \r\n+    \r\n+    : FormBuilder,\r\n     private authService: AuthService,\r\n     private router: Router\r\n   ) {}\r\n \r\n"
                },
                {
                    "date": 1740322930681,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,74 +1,65 @@\n import { Component, OnInit } from '@angular/core';\r\n-import { FormBuilder, FormGroup, Validators, ReactiveFormsModule } from '@angular/forms';\r\n+import { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\n import { Router } from '@angular/router';\r\n import { AuthService } from '../../services/auth.service';\r\n-import { CommonModule } from '@angular/common';\r\n-import { RouterModule } from '@angular/router';\r\n \r\n @Component({\r\n   selector: 'app-login',\r\n-  standalone: true,\r\n-  imports: [CommonModule, ReactiveFormsModule, RouterModule],\r\n   templateUrl: './login.component.html',\r\n-  styleUrl: './login.component.css'\r\n+  styleUrls: ['./login.component.css']\r\n })\r\n export class LoginComponent implements OnInit {\r\n-  loginForm!: FormGroup;\r\n+  loginForm!: FormGroup;  // Note the ! operator\r\n   isLoading = false;\r\n   errorMessage = '';\r\n \r\n   constructor(\r\n-    private fb\r\n-    \r\n-    \r\n-    : FormBuilder,\r\n+    private fb: FormBuilder,\r\n     private authService: AuthService,\r\n     private router: Router\r\n   ) {}\r\n \r\n   ngOnInit(): void {\r\n-    // Removed JWT expiration check\r\n+    this.initializeForm();\r\n+  }\r\n+\r\n+  private initializeForm(): void {\r\n     this.loginForm = this.fb.group({\r\n       email: ['', [Validators.required, Validators.email]],\r\n       password: ['', Validators.required],\r\n       remember: [false]\r\n     });\r\n   }\r\n \r\n-  async onSubmit(): Promise<void> {\r\n-    if (this.loginForm.valid) {\r\n+  async googleLogin(): Promise<void> {\r\n+    try {\r\n       this.isLoading = true;\r\n-      this.errorMessage = '';\r\n-\r\n-      try {\r\n-        const { email, password } = this.loginForm.value;\r\n-        await this.authService.login(email, password).toPromise();\r\n-        this.router.navigate(['/dashboard']);\r\n-      } catch (error: unknown) {\r\n-        this.errorMessage = error instanceof Error ? \r\n-          error.message : 'Login failed. Please try again.';\r\n-      } finally {\r\n-        this.isLoading = false;\r\n-      }\r\n-    } else {\r\n-      Object.keys(this.loginForm.controls).forEach(key => {\r\n-        const control = this.loginForm.get(key);\r\n-        if (control?.invalid) {\r\n-          control.markAsTouched();\r\n-        }\r\n-      });\r\n+      await this.authService.googleLogin();\r\n+      this.router.navigate(['/dashboard']);\r\n+    } catch (error: unknown) {\r\n+      this.errorMessage = error instanceof Error ? \r\n+        error.message : 'Google sign-in failed';\r\n+      console.error('Google login error:', error);\r\n+    } finally {\r\n+      this.isLoading = false;\r\n     }\r\n   }\r\n \r\n-  async googleLogin(): Promise<void> {\r\n+  async onSubmit(): Promise<void> {\r\n+    if (this.loginForm.invalid) {\r\n+      return;\r\n+    }\r\n+\r\n     try {\r\n       this.isLoading = true;\r\n-      const response = await this.authService.googleLogin();\r\n+      const { email, password } = this.loginForm.value;\r\n+      await this.authService.login(email, password);\r\n       this.router.navigate(['/dashboard']);\r\n     } catch (error: unknown) {\r\n       this.errorMessage = error instanceof Error ? \r\n-        error.message : 'Google login failed. Please try again.';\r\n+        error.message : 'Login failed. Please try again.';\r\n+      console.error('Login error:', error);\r\n     } finally {\r\n       this.isLoading = false;\r\n     }\r\n   }\r\n"
                },
                {
                    "date": 1740322961570,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -30,37 +30,6 @@\n       remember: [false]\r\n     });\r\n   }\r\n \r\n-  async googleLogin(): Promise<void> {\r\n-    try {\r\n-      this.isLoading = true;\r\n-      await this.authService.googleLogin();\r\n-      this.router.navigate(['/dashboard']);\r\n-    } catch (error: unknown) {\r\n-      this.errorMessage = error instanceof Error ? \r\n-        error.message : 'Google sign-in failed';\r\n-      console.error('Google login error:', error);\r\n-    } finally {\r\n-      this.isLoading = false;\r\n-    }\r\n-  }\r\n-\r\n-  async onSubmit(): Promise<void> {\r\n-    if (this.loginForm.invalid) {\r\n-      return;\r\n-    }\r\n-\r\n-    try {\r\n-      this.isLoading = true;\r\n-      const { email, password } = this.loginForm.value;\r\n-      await this.authService.login(email, password);\r\n-      this.router.navigate(['/dashboard']);\r\n-    } catch (error: unknown) {\r\n-      this.errorMessage = error instanceof Error ? \r\n-        error.message : 'Login failed. Please try again.';\r\n-      console.error('Login error:', error);\r\n-    } finally {\r\n-      this.isLoading = false;\r\n-    }\r\n-  }\r\n+  // ... rest of your existing methods\r\n }\r\n"
                },
                {
                    "date": 1740322974672,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -30,6 +30,37 @@\n       remember: [false]\r\n     });\r\n   }\r\n \r\n-  // ... rest of your existing methods\r\n+  async googleLogin(): Promise<void> {\r\n+    try {\r\n+      this.isLoading = true;\r\n+      await this.authService.googleLogin();\r\n+      this.router.navigate(['/dashboard']);\r\n+    } catch (error: unknown) {\r\n+      this.errorMessage = error instanceof Error ? \r\n+        error.message : 'Google sign-in failed';\r\n+      console.error('Google login error:', error);\r\n+    } finally {\r\n+      this.isLoading = false;\r\n+    }\r\n+  }\r\n+\r\n+  async onSubmit(): Promise<void> {\r\n+    if (this.loginForm.invalid) {\r\n+      return;\r\n+    }\r\n+\r\n+    try {\r\n+      this.isLoading = true;\r\n+      const { email, password } = this.loginForm.value;\r\n+      await this.authService.login(email, password);\r\n+      this.router.navigate(['/dashboard']);\r\n+    } catch (error: unknown) {\r\n+      this.errorMessage = error instanceof Error ? \r\n+        error.message : 'Login failed. Please try again.';\r\n+      console.error('Login error:', error);\r\n+    } finally {\r\n+      this.isLoading = false;\r\n+    }\r\n+  }\r\n }\r\n"
                },
                {
                    "date": 1740323075259,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -37,9 +37,9 @@\n       await this.authService.googleLogin();\r\n       this.router.navigate(['/dashboard']);\r\n     } catch (error: unknown) {\r\n       this.errorMessage = error instanceof Error ? \r\n-        error.message : 'Google sign-in failed';\r\n+        error.message : 'Google sign-in failed. Please try again.';\r\n       console.error('Google login error:', error);\r\n     } finally {\r\n       this.isLoading = false;\r\n     }\r\n"
                },
                {
                    "date": 1740326282433,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,16 +1,19 @@\n import { Component, OnInit } from '@angular/core';\r\n-import { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\n-import { Router } from '@angular/router';\r\n+import { FormBuilder, FormGroup, Validators, ReactiveFormsModule } from '@angular/forms';\r\n+import { Router, RouterModule } from '@angular/router';\r\n import { AuthService } from '../../services/auth.service';\r\n+import { CommonModule } from '@angular/common';\r\n \r\n @Component({\r\n   selector: 'app-login',\r\n+  standalone: true,\r\n+  imports: [CommonModule, ReactiveFormsModule, RouterModule],\r\n   templateUrl: './login.component.html',\r\n   styleUrls: ['./login.component.css']\r\n })\r\n export class LoginComponent implements OnInit {\r\n-  loginForm!: FormGroup;  // Note the ! operator\r\n+  loginForm!: FormGroup;\r\n   isLoading = false;\r\n   errorMessage = '';\r\n \r\n   constructor(\r\n@@ -19,12 +22,8 @@\n     private router: Router\r\n   ) {}\r\n \r\n   ngOnInit(): void {\r\n-    this.initializeForm();\r\n-  }\r\n-\r\n-  private initializeForm(): void {\r\n     this.loginForm = this.fb.group({\r\n       email: ['', [Validators.required, Validators.email]],\r\n       password: ['', Validators.required],\r\n       remember: [false]\r\n"
                },
                {
                    "date": 1740340085752,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,9 +1,9 @@\n import { Component, OnInit } from '@angular/core';\r\n-import { FormBuilder, FormGroup, Validators, ReactiveFormsModule } from '@angular/forms';\r\n+import { CommonModule } from '@angular/common';\r\n+import { FormBuilder, FormGroup, ReactiveFormsModule, Validators } from '@angular/forms';\r\n import { Router, RouterModule } from '@angular/router';\r\n-import { AuthService } from '../../services/auth.service';\r\n-import { CommonModule } from '@angular/common';\r\n+import { AuthService } from '../services/auth.service';\r\n \r\n @Component({\r\n   selector: 'app-login',\r\n   standalone: true,\r\n"
                },
                {
                    "date": 1740340161378,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -8,9 +8,9 @@\n   selector: 'app-login',\r\n   standalone: true,\r\n   imports: [CommonModule, ReactiveFormsModule, RouterModule],\r\n   templateUrl: './login.component.html',\r\n-  styleUrls: ['./login.component.css']\r\n+  styleUrl: './login.component.css'\r\n })\r\n export class LoginComponent implements OnInit {\r\n   loginForm!: FormGroup;\r\n   isLoading = false;\r\n"
                },
                {
                    "date": 1740340283511,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -22,8 +22,12 @@\n     private router: Router\r\n   ) {}\r\n \r\n   ngOnInit(): void {\r\n+    this.initForm();\r\n+  }\r\n+\r\n+  private initForm(): void {\r\n     this.loginForm = this.fb.group({\r\n       email: ['', [Validators.required, Validators.email]],\r\n       password: ['', Validators.required],\r\n       remember: [false]\r\n"
                },
                {
                    "date": 1740380162235,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,9 +1,9 @@\n import { Component, OnInit } from '@angular/core';\r\n import { CommonModule } from '@angular/common';\r\n import { FormBuilder, FormGroup, ReactiveFormsModule, Validators } from '@angular/forms';\r\n import { Router, RouterModule } from '@angular/router';\r\n-import { AuthService } from '../services/auth.service';\r\n+import { AuthService } from '../../services/auth.service';\r\n \r\n @Component({\r\n   selector: 'app-login',\r\n   standalone: true,\r\n"
                },
                {
                    "date": 1740382730555,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -2,14 +2,14 @@\n import { CommonModule } from '@angular/common';\r\n import { FormBuilder, FormGroup, ReactiveFormsModule, Validators } from '@angular/forms';\r\n import { Router, RouterModule } from '@angular/router';\r\n import { AuthService } from '../../services/auth.service';\r\n+import { LoginData } from '../interfaces/user.interface';\r\n \r\n @Component({\r\n   selector: 'app-login',\r\n   standalone: true,\r\n   imports: [CommonModule, ReactiveFormsModule, RouterModule],\r\n-  templateUrl: './login.component.html',\r\n   styleUrl: './login.component.css'\r\n })\r\n export class LoginComponent implements OnInit {\r\n   loginForm!: FormGroup;\r\n"
                },
                {
                    "date": 1740382735811,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -8,8 +8,9 @@\n @Component({\r\n   selector: 'app-login',\r\n   standalone: true,\r\n   imports: [CommonModule, ReactiveFormsModule, RouterModule],\r\n+  templateUrl: './login.component.html',\r\n   styleUrl: './login.component.css'\r\n })\r\n export class LoginComponent implements OnInit {\r\n   loginForm!: FormGroup;\r\n"
                },
                {
                    "date": 1740383011535,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -2,9 +2,9 @@\n import { CommonModule } from '@angular/common';\r\n import { FormBuilder, FormGroup, ReactiveFormsModule, Validators } from '@angular/forms';\r\n import { Router, RouterModule } from '@angular/router';\r\n import { AuthService } from '../../services/auth.service';\r\n-import { LoginData } from '../interfaces/user.interface';\r\n+import { LoginData } from '../../interfaces/user.interface';\r\n \r\n @Component({\r\n   selector: 'app-login',\r\n   standalone: true,\r\n"
                },
                {
                    "date": 1740384843565,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -37,9 +37,9 @@\n \r\n   async googleLogin(): Promise<void> {\r\n     try {\r\n       this.isLoading = true;\r\n-      await this.authService.googleLogin();\r\n+      await this.authService.googleSignIn();  // Changed from googleLogin to googleSignIn\r\n       this.router.navigate(['/dashboard']);\r\n     } catch (error: unknown) {\r\n       this.errorMessage = error instanceof Error ? \r\n         error.message : 'Google sign-in failed. Please try again.';\r\n"
                }
            ],
            "date": 1740264085420,
            "name": "Commit-0",
            "content": "import { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators, ReactiveFormsModule } from '@angular/forms';\r\nimport { Router } from '@angular/router';\r\nimport { AuthService } from '../../services/auth.service';\r\nimport { CommonModule } from '@angular/common';\r\nimport { RouterModule } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-login',\r\n  standalone: true,\r\n  imports: [CommonModule, ReactiveFormsModule, RouterModule],\r\n  templateUrl: './login.component.html',\r\n  styleUrl: './login.component.css'\r\n})\r\nexport class LoginComponent implements OnInit {\r\n  loginForm!: FormGroup;\r\n  isLoading = false;\r\n  errorMessage = '';\r\n\r\n  constructor(\r\n    private fb: FormBuilder,\r\n    private authService: AuthService,\r\n    private router: Router\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    this.loginForm = this.fb.group({\r\n      email: ['', [Validators.required, Validators.email]],\r\n      password: ['', Validators.required],\r\n      remember: [false]\r\n    });\r\n  }\r\n\r\n  async onSubmit(): Promise<void> {\r\n    if (this.loginForm.valid) {\r\n      this.isLoading = true;\r\n      this.errorMessage = '';\r\n\r\n      try {\r\n        const { email, password } = this.loginForm.value;\r\n        await this.authService.login(email, password).toPromise();\r\n        this.router.navigate(['/dashboard']);\r\n      } catch (error: unknown) {\r\n        this.errorMessage = error instanceof Error ? \r\n          error.message : 'Login failed. Please try again.';\r\n      } finally {\r\n        this.isLoading = false;\r\n      }\r\n    } else {\r\n      Object.keys(this.loginForm.controls).forEach(key => {\r\n        const control = this.loginForm.get(key);\r\n        if (control?.invalid) {\r\n          control.markAsTouched();\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  async googleLogin(): Promise<void> {\r\n    try {\r\n      this.isLoading = true;\r\n      await this.authService.googleLogin().toPromise();\r\n      this.router.navigate(['/dashboard']);\r\n    } catch (error: unknown) {\r\n      this.errorMessage = error instanceof Error ? \r\n        error.message : 'Google login failed. Please try again.';\r\n    } finally {\r\n      this.isLoading = false;\r\n    }\r\n  }\r\n}\r\n"
        }
    ]
}